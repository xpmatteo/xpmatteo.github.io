<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: The Little Pickaxer	</title>
	<atom:link href="http://matteo.vaccari.name/blog/archives/99/feed" rel="self" type="application/rss+xml" />
	<link>http://matteo.vaccari.name/blog/archives/99</link>
	<description>Extreme enthusiasm</description>
	<lastBuildDate>
	Mon, 25 Feb 2019 15:18:16 +0000	</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.1.1</generator>
			<item>
				<title>
				By: Let&#8217;s start with Django! &#171; If ain&#8217;t broken don&#8217;t fix it				</title>
				<link>http://matteo.vaccari.name/blog/archives/99/comment-page-1#comment-37882</link>
		<dc:creator><![CDATA[Let&#8217;s start with Django! &#171; If ain&#8217;t broken don&#8217;t fix it]]></dc:creator>
		<pubDate>Mon, 10 Mar 2008 09:28:21 +0000</pubDate>
		<guid isPermaLink="false">http://matteo.vaccari.name/blog/?p=99#comment-37882</guid>
					<description><![CDATA[[...] So far I&#8217;m in love with it. All the niceties of ROR without the dark arts part. Of course if you are able to read and enjoy The little LISPer you probably are much more intelligent than me. [...]]]></description>
		<content:encoded><![CDATA[<p>[&#8230;] So far I&#8217;m in love with it. All the niceties of ROR without the dark arts part. Of course if you are able to read and enjoy The little LISPer you probably are much more intelligent than me. [&#8230;]</p>
]]></content:encoded>
						</item>
						<item>
				<title>
				By: Matteo Vaccari &#187; Blog Archive &#187; Queste funzioni &#8220;*&#8221;				</title>
				<link>http://matteo.vaccari.name/blog/archives/99/comment-page-1#comment-18132</link>
		<dc:creator><![CDATA[Matteo Vaccari &#187; Blog Archive &#187; Queste funzioni &#8220;*&#8221;]]></dc:creator>
		<pubDate>Sun, 21 Oct 2007 14:04:32 +0000</pubDate>
		<guid isPermaLink="false">http://matteo.vaccari.name/blog/?p=99#comment-18132</guid>
					<description><![CDATA[]]></description>
		<content:encoded><![CDATA[<p>[&#8230;] Quindi la rember* non è altro che la reject applicata ad alberi (ovvero liste comunque innestate. Sì Ugo, alla fine queste liste sono piante :-). [&#8230;]</p>
]]></content:encoded>
						</item>
						<item>
				<title>
				By: Marco Trinci				</title>
				<link>http://matteo.vaccari.name/blog/archives/99/comment-page-1#comment-18130</link>
		<dc:creator><![CDATA[Marco Trinci]]></dc:creator>
		<pubDate>Sun, 21 Oct 2007 12:57:32 +0000</pubDate>
		<guid isPermaLink="false">http://matteo.vaccari.name/blog/?p=99#comment-18130</guid>
					<description><![CDATA[rember_star(A, [A&#124;Rest]) -&#062; rember_star(A,Rest);
rember_star(A, [First&#124;Rest]) -&#062; [rember_star(A,First)] ++ rember_star(A,Rest);
rember_star(_, A) -&#062; A.

rember_star_test_() -&#062; [
	?_assertMatch ([], rember_star(anything, [])),
	?_assertMatch ([], rember_star(foo, [foo])),
	?_assertMatch ([bar], rember_star(foo, [bar])),
	?_assertMatch ([a, c], rember_star(b, [a, b, c])),
	?_assertMatch ([[[]]], rember_star(foo, [[[foo]]])),
	?_assertMatch ([[coffee], [[tea]], [e, [hick]]], rember_star(cup, [[coffee], cup, [[tea], cup], [e, [hick]], cup]))
	].

insertR_star(A, B, [A&#124;Rest]) -&#062; [A,B] ++ insertR_star(A,B,Rest);
insertR_star(A, B, [First&#124;Rest]) -&#062; [insertR_star(A,B,First)] ++ insertR_star(A,B,Rest);
insertR_star(_, _, A) -&#062; A.

insertR_star_test_() -&#062; [
	?_assertMatch ([], insertR_star(anything, anything, [])),
	?_assertMatch ([foo,chuck], insertR_star(foo, chuck, [foo])),
	?_assertMatch ([bar], insertR_star(foo, anything, [bar])),
	?_assertMatch ([a,b,chuck,c], insertR_star(b, chuck, [a, b, c])),
	?_assertMatch ([[[foo, chuck]]], insertR_star(foo, chuck, [[[foo]]])),
	?_assertMatch (
		[[how, much, [wood]], could, [[a, [wood], chuck, roast]], [[[chuck, roast]]], [se, [a], [[wood, chuck, roast]]], could, chuck, roast, wood]		
	, insertR_star(chuck,roast, 
		[[how, much, [wood]], could, [[a, [wood], chuck]], [[[chuck]]], [se, [a], [[wood, chuck]]], could, chuck, wood]
	))].]]></description>
		<content:encoded><![CDATA[<p>rember_star(A, [A|Rest]) -&gt; rember_star(A,Rest);<br />
rember_star(A, [First|Rest]) -&gt; [rember_star(A,First)] ++ rember_star(A,Rest);<br />
rember_star(_, A) -&gt; A.</p>
<p>rember_star_test_() -&gt; [<br />
	?_assertMatch ([], rember_star(anything, [])),<br />
	?_assertMatch ([], rember_star(foo, [foo])),<br />
	?_assertMatch ([bar], rember_star(foo, [bar])),<br />
	?_assertMatch ([a, c], rember_star(b, [a, b, c])),<br />
	?_assertMatch ([[[]]], rember_star(foo, [[[foo]]])),<br />
	?_assertMatch ([[coffee], [[tea]], [e, [hick]]], rember_star(cup, [[coffee], cup, [[tea], cup], [e, [hick]], cup]))<br />
	].</p>
<p>insertR_star(A, B, [A|Rest]) -&gt; [A,B] ++ insertR_star(A,B,Rest);<br />
insertR_star(A, B, [First|Rest]) -&gt; [insertR_star(A,B,First)] ++ insertR_star(A,B,Rest);<br />
insertR_star(_, _, A) -&gt; A.</p>
<p>insertR_star_test_() -&gt; [<br />
	?_assertMatch ([], insertR_star(anything, anything, [])),<br />
	?_assertMatch ([foo,chuck], insertR_star(foo, chuck, [foo])),<br />
	?_assertMatch ([bar], insertR_star(foo, anything, [bar])),<br />
	?_assertMatch ([a,b,chuck,c], insertR_star(b, chuck, [a, b, c])),<br />
	?_assertMatch ([[[foo, chuck]]], insertR_star(foo, chuck, [[[foo]]])),<br />
	?_assertMatch (<br />
		[[how, much, [wood]], could, [[a, [wood], chuck, roast]], [[[chuck, roast]]], [se, [a], [[wood, chuck, roast]]], could, chuck, roast, wood]<br />
	, insertR_star(chuck,roast,<br />
		[[how, much, [wood]], could, [[a, [wood], chuck]], [[[chuck]]], [se, [a], [[wood, chuck]]], could, chuck, wood]<br />
	))].</p>
]]></content:encoded>
						</item>
						<item>
				<title>
				By: Ugo Cei				</title>
				<link>http://matteo.vaccari.name/blog/archives/99/comment-page-1#comment-18125</link>
		<dc:creator><![CDATA[Ugo Cei]]></dc:creator>
		<pubDate>Sun, 21 Oct 2007 11:15:14 +0000</pubDate>
		<guid isPermaLink="false">http://matteo.vaccari.name/blog/?p=99#comment-18125</guid>
					<description><![CDATA[]]></description>
		<content:encoded><![CDATA[<p>&#8220;Questa rember* in pratica rimuove tutte le occorrenze del primo simbolo, in una lista comunque innestata.&#8221;</p>
<p>Innestata? Non sapevo che le liste fossero piante ;)</p>
<p>Questa è come tradurre &#8220;I pretend to have a horse in my factory&#8221; come &#8220;Pretendo di avere un orso nella mia fattoria&#8221;.</p>
<p>;))))</p>
]]></content:encoded>
						</item>
			</channel>
</rss>
