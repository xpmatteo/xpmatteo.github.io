<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: On the folly of representing a first name with a String	</title>
	<atom:link href="http://matteo.vaccari.name/blog/archives/685/feed" rel="self" type="application/rss+xml" />
	<link>http://matteo.vaccari.name/blog/archives/685</link>
	<description>Extreme enthusiasm</description>
	<lastBuildDate>
	Mon, 25 Feb 2019 15:18:16 +0000	</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.1.1</generator>
			<item>
				<title>
				By: itoctopus				</title>
				<link>http://matteo.vaccari.name/blog/archives/685/comment-page-1#comment-94773</link>
		<dc:creator><![CDATA[itoctopus]]></dc:creator>
		<pubDate>Sun, 08 Jan 2012 05:29:54 +0000</pubDate>
		<guid isPermaLink="false">http://matteo.vaccari.name/blog/?p=685#comment-94773</guid>
					<description><![CDATA[Interesting but I&#039;m not sure if, in a company, someone writes this code others who will work on the same code will actually use it. This will probably lead to more code redundancy and will worsen the situation.]]></description>
		<content:encoded><![CDATA[<p>Interesting but I&#8217;m not sure if, in a company, someone writes this code others who will work on the same code will actually use it. This will probably lead to more code redundancy and will worsen the situation.</p>
]]></content:encoded>
						</item>
						<item>
				<title>
				By: Uberto				</title>
				<link>http://matteo.vaccari.name/blog/archives/685/comment-page-1#comment-94762</link>
		<dc:creator><![CDATA[Uberto]]></dc:creator>
		<pubDate>Thu, 05 Jan 2012 13:47:26 +0000</pubDate>
		<guid isPermaLink="false">http://matteo.vaccari.name/blog/?p=685#comment-94762</guid>
					<description><![CDATA[I completely agree. We did something similar on gae-gwt project and it worked like a charms. Much better than the standard annotation ridden JPA solution.

On a side note:
maybe it&#039;s just because of gwt but we use View specific interfaces.

interface RegistrationView extends FormView {
  void setUser(User aUser);
}

then in the implementation we associate the fields in User with the html elements.

Note that there is no getter because the user is not stored as field in the view but just translated in html/js and that our User is immutable, so when the presenter needs the user the View will create a new one from its fields (there could be also hidden).]]></description>
		<content:encoded><![CDATA[<p>I completely agree. We did something similar on gae-gwt project and it worked like a charms. Much better than the standard annotation ridden JPA solution.</p>
<p>On a side note:<br />
maybe it&#8217;s just because of gwt but we use View specific interfaces.</p>
<p>interface RegistrationView extends FormView {<br />
  void setUser(User aUser);<br />
}</p>
<p>then in the implementation we associate the fields in User with the html elements.</p>
<p>Note that there is no getter because the user is not stored as field in the view but just translated in html/js and that our User is immutable, so when the presenter needs the user the View will create a new one from its fields (there could be also hidden).</p>
]]></content:encoded>
						</item>
						<item>
				<title>
				By: Moreno Carullo				</title>
				<link>http://matteo.vaccari.name/blog/archives/685/comment-page-1#comment-94753</link>
		<dc:creator><![CDATA[Moreno Carullo]]></dc:creator>
		<pubDate>Thu, 05 Jan 2012 07:16:20 +0000</pubDate>
		<guid isPermaLink="false">http://matteo.vaccari.name/blog/?p=685#comment-94753</guid>
					<description><![CDATA[Very interesting, Matteo.

On the presentYouselfOn method: I like it very much, it is indeed very similar to Seaside&#039;s renderContentOn method that accepts an HtmlCanvas as an argument.

http://book.seaside.st/book/fundamentals/rendering-components/fun-with-canvas

-- Moreno]]></description>
		<content:encoded><![CDATA[<p>Very interesting, Matteo.</p>
<p>On the presentYouselfOn method: I like it very much, it is indeed very similar to Seaside&#8217;s renderContentOn method that accepts an HtmlCanvas as an argument.</p>
<p><a href="http://book.seaside.st/book/fundamentals/rendering-components/fun-with-canvas" rel="nofollow">http://book.seaside.st/book/fundamentals/rendering-components/fun-with-canvas</a></p>
<p>&#8212; Moreno</p>
]]></content:encoded>
						</item>
			</channel>
</rss>
